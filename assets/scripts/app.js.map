{"version":3,"file":"app.js","sources":["webpack://dragdrop/./src/app.js","webpack://dragdrop/./src/components/project-item/project-item.js","webpack://dragdrop/./src/components/project-list/project-list.js","webpack://dragdrop/webpack/bootstrap","webpack://dragdrop/webpack/runtime/define property getters","webpack://dragdrop/webpack/runtime/hasOwnProperty shorthand","webpack://dragdrop/webpack/runtime/make namespace object","webpack://dragdrop/webpack/startup"],"sourcesContent":["import { ProjectList } from \"./components/project-list/project-list.js\";\n\nclass App {\n\tstatic init() {\n\t\tnew ProjectList(\"active\");\n\t\tnew ProjectList(\"finished\");\n\t}\n}\n\nApp.init();\n","export class ProjectItem {\n\tconstructor(id) {\n\t\tthis.id = id;\n\t\tthis.projectElement = document.getElementById(`${this.id}`);\n\t}\n\n\tremoveInfoHandler(element) {\n\t\tthis.projectElement.removeChild(element);\n\t}\n\n\tconnectDrag() {\n\t\tthis.projectElement.addEventListener(\"dragstart\", e => {\n\t\t\t// Append a data to a draggable element\n\t\t\te.dataTransfer.setData(\"text/plain\", this.id);\n\t\t\t// Define what kind of D&D perform\n\t\t\te.dataTransfer.effectAllowed = \"move\";\n\t\t});\n\n\t\tthis.projectElement.addEventListener(\"dragend\", e => {\n\t\t\t// Code to style dropped item or...\n\t\t});\n\t}\n\n\ttooltipRenderHandler() {\n\t\tconst infoElement = document.createElement(\"div\");\n\t\tinfoElement.className = \"card\";\n\t\tinfoElement.textContent = \"Dummy text\";\n\n\t\tinfoElement.addEventListener(\n\t\t\t\"click\",\n\t\t\tthis.removeInfoHandler.bind(this, infoElement)\n\t\t);\n\n\t\tconst infoBtn = this.projectElement.querySelector(`button:first-of-type`);\n\n\t\tinfoElement.style.position = \"fixed\";\n\t\tinfoElement.style.top =\n\t\t\tinfoBtn.offsetTop +\n\t\t\tinfoBtn.offsetHeight -\n\t\t\tthis.projectElement.parentNode.scrollTop +\n\t\t\t\"px\";\n\t\tinfoElement.style.left = infoBtn.offsetLeft + \"px\";\n\t\tthis.projectElement.insertAdjacentElement(\"beforeend\", infoElement);\n\t}\n\n\tmoreInfoHandler() {\n\t\tif (this.projectElement.querySelector(\".card\")) return;\n\t\tthis.tooltipRenderHandler();\n\t}\n\n\tmoreInfoButton() {\n\t\tconst infoButton = this.projectElement.querySelector(\n\t\t\t`button:first-of-type`\n\t\t);\n\t\tinfoButton.addEventListener(\"click\", this.moreInfoHandler.bind(this));\n\t}\n\n\tswitchHandler() {\n\t\tconst projectListEl = this.projectElement.parentNode;\n\t\tconst switchButton = this.projectElement.querySelector(`button:last-of-type`);\n\t\tconst tooltip = this.projectElement.querySelector(\".card\");\n\t\tlet projectList;\n\t\t// Check to detect a new parent of element and change text of button\n\t\tif (projectListEl.parentNode.id === \"active-projects\") {\n\t\t\tprojectList = document.querySelector(`#finished-projects ul`);\n\t\t\tswitchButton.textContent = \"Activate\";\n\t\t} else {\n\t\t\tprojectList = document.querySelector(`#active-projects ul`);\n\t\t\tswitchButton.textContent = \"Finish\";\n\t\t}\n\t\t// Addd element to a new parent\n\t\tprojectList.appendChild(this.projectElement);\n\t\t// Remove tooltips of element\n\t\ttooltip?.parentNode.removeChild(tooltip);\n\t}\n\n\tswitchButton() {\n\t\tconst switchButton = this.projectElement.querySelector(`button:last-of-type`);\n\t\tthis.projectElement.parentNode.onscroll = () => {\n\t\t\tconst items = this.projectElement.parentNode.querySelectorAll(\"li\");\n\t\t\tfor (const item of items) {\n\t\t\t\tconst tooltip = item.querySelector(\".card\");\n\t\t\t\ttooltip?.parentNode.removeChild(tooltip);\n\t\t\t}\n\t\t};\n\t\tswitchButton.addEventListener(\"click\", this.switchHandler.bind(this));\n\t}\n}","import { ProjectItem } from \"../project-item/project-item.js\";\n\nexport class ProjectList {\n\tconstructor(type) {\n\t\tthis.type = type;\n\t\tconst projectItems = document.querySelectorAll(`#${this.type}-projects li`);\n\t\tfor (const item of projectItems) {\n\t\t\tconst temp = new ProjectItem(item.id);\n\t\t\ttemp.switchButton();\n\t\t\ttemp.moreInfoButton();\n\t\t\ttemp.connectDrag();\n\t\t}\n\t\tthis.connectDroppable();\n\t}\n\n\tconnectDroppable() {\n\t\tconst list = document.querySelector(`#${this.type}-projects ul`);\n\n\t\t// Should have this dragover event to call method preventDefault\n\t\tlist.addEventListener(\"dragover\", (e) => {\n\t\t\t// Check if the draggable element exists\n\t\t\tif (e.dataTransfer.types[0] === \"text/plain\") {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t\tlist.parentElement.classList.add(\"droppable\");\n\t\t});\n\n\t\tlist.addEventListener(\"dragleave\", (e) => {\n\t\t\t// Check to remove droppable class when draggable moving to a new parent only\n\t\t\tif (\n\t\t\t\te.relatedTarget.closest &&\n\t\t\t\te.relatedTarget.closest(`#${this.type}-projects ul`) !== list\n\t\t\t) {\n\t\t\t\tlist.parentElement.classList.remove(\"droppable\");\n\t\t\t}\n\t\t});\n\n\t\tlist.addEventListener(\"drop\", (e) => {\n\t\t\te.preventDefault();\n\t\t\tconst projectId = e.dataTransfer.getData(\"text/plain\");\n\t\t\tlet projectList = e.target\n\t\t\t\t.closest(`#${this.type}-projects ul`)\n\t\t\t\t.querySelectorAll(\"li\");\n\t\t\t// Prevent from dropping right inside a current parent\n\t\t\tfor (const item of projectList) {\n\t\t\t\tif (item.id === projectId) {\n\t\t\t\t\tlist.parentElement.classList.remove(\"droppable\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Trigger button event instead of creating a new function\n\t\t\tdocument\n\t\t\t\t.getElementById(projectId)\n\t\t\t\t.querySelector(\"button:last-of-type\")\n\t\t\t\t.click();\n\n\t\t\tlist.parentElement.classList.remove(\"droppable\");\n\t\t});\n\t}\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/app.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACNA;AACA;AACA;AACA;;A","sourceRoot":""}